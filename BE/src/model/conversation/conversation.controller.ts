import {
  Controller,
  Patch,
  Post,
  Get,
  Delete,
  Body,
  Param,
} from '@nestjs/common';
import { ConversationService } from '../conversation/conversation.service';
import { CreateConversationDto } from './conversation.dto';
import {
  ApiTags,
  ApiOperation,
  ApiResponse,
  ApiBody,
  ApiParam,
} from '@nestjs/swagger';

@ApiTags('Conversations') // üëà Nh√≥m API trong Swagger UI
@Controller('conversations')
export class ConversationController {
  constructor(private readonly conversation_service: ConversationService) {}

  // ‚úÖ 1. T·∫°o cu·ªôc h·ªôi tho·∫°i m·ªõi
  @Post()
  @ApiOperation({ summary: 'T·∫°o cu·ªôc h·ªôi tho·∫°i m·ªõi' })
  @ApiBody({
    schema: {
      example: {
        conversation_name: 'Nh√≥m b·∫°n th√¢n c·∫•p 3',
        participants: ['66dff4b91f17e9482f41b7f1', '66dff4b91f17e9482f41b7f2'],
        admin: '66dff4b91f17e9482f41b7f1',
        last_message: 'Ch√†o m·ªçi ng∆∞·ªùi nh√©!',
      },
    },
  })
  @ApiResponse({
    status: 201,
    description: 'T·∫°o th√†nh c√¥ng cu·ªôc h·ªôi tho·∫°i',
  })
  async Create(@Body() dto: CreateConversationDto) {
    return this.conversation_service.CreateConversation(dto);
  }

  // ‚úÖ 2. L·∫•y t·∫•t c·∫£ cu·ªôc h·ªôi tho·∫°i
  @Get()
  @ApiOperation({ summary: 'L·∫•y danh s√°ch t·∫•t c·∫£ cu·ªôc h·ªôi tho·∫°i' })
  @ApiResponse({
    status: 200,
    description: 'Danh s√°ch t·∫•t c·∫£ c√°c cu·ªôc h·ªôi tho·∫°i',
  })
  async getAll() {
    return this.conversation_service.GetAllConversation();
  }

  // ‚úÖ 3. L·∫•y chi ti·∫øt 1 cu·ªôc h·ªôi tho·∫°i + danh s√°ch tin nh·∫Øn
  @Get(':id')
  @ApiOperation({ summary: 'L·∫•y chi ti·∫øt cu·ªôc h·ªôi tho·∫°i theo ID' })
  @ApiParam({
    name: 'id',
    description: 'ID c·ªßa cu·ªôc h·ªôi tho·∫°i',
    example: '66dff4b91f17e9482f41b7f1',
  })
  @ApiResponse({
    status: 200,
    description: 'Chi ti·∫øt cu·ªôc h·ªôi tho·∫°i v√† danh s√°ch tin nh·∫Øn',
  })
  async getById(@Param('id') id: string) {
    return this.conversation_service.GetConversationId(id);
  }

  // ‚úÖ 4. Xo√° cu·ªôc h·ªôi tho·∫°i
  @Delete(':id')
  @ApiOperation({ summary: 'Xo√° cu·ªôc h·ªôi tho·∫°i theo ID' })
  @ApiParam({
    name: 'id',
    description: 'ID c·ªßa cu·ªôc h·ªôi tho·∫°i c·∫ßn xo√°',
    example: '66dff4b91f17e9482f41b7f1',
  })
  @ApiResponse({
    status: 200,
    description: 'Xo√° cu·ªôc h·ªôi tho·∫°i th√†nh c√¥ng',
  })
  async delete(@Param('id') id: string) {
    return this.conversation_service.DeleteConversation(id);
  }
}
