import {
    Controller,
    Post,
    Get,
    Patch,
    Delete,
    Param,
    Body,
  } from '@nestjs/common';
  import { MessageService } from './message.service';
  import { CreateMessageDto, UpdateMessageDto } from './message.dto';
  import {
    ApiTags,
    ApiOperation,
    ApiResponse,
    ApiBody,
    ApiParam,
  } from '@nestjs/swagger';
  import { Message } from '../index.schema';
  
  @ApiTags('messages') // üìå Nh√≥m API trong Swagger
  @Controller('messages')
  export class MessageController {
    constructor(private readonly message_service: MessageService) {}
  
    // ‚úÖ 1. G·ª≠i tin nh·∫Øn m·ªõi
    @Post()
    @ApiOperation({ summary: 'G·ª≠i tin nh·∫Øn m·ªõi trong cu·ªôc h·ªôi tho·∫°i' })
    @ApiBody({
      schema: {
        example: {
          senderId: '66dff4b91f17e9482f41b7f1',
          conversationId: '66e0a0b1f1f84c03d2a1a2d5',
          content: 'Xin ch√†o, b·∫°n kh·ªèe kh√¥ng?',
          attachments: ['https://example.com/image.png'],
        },
      },
    })
    @ApiResponse({
      status: 201,
      description: 'Tin nh·∫Øn ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng',
      type: Message,
    })
    Create(@Body() dto: CreateMessageDto) {
      return this.message_service.SendMessage(dto);
    }
  
    // ‚úÖ 2. L·∫•y danh s√°ch tin nh·∫Øn c·ªßa 1 cu·ªôc h·ªôi tho·∫°i
    @Get(':conversationId')
    @ApiOperation({ summary: 'L·∫•y danh s√°ch tin nh·∫Øn theo conversationId' })
    @ApiParam({
      name: 'conversationId',
      description: 'ID c·ªßa cu·ªôc h·ªôi tho·∫°i',
      example: '66e0a0b1f1f84c03d2a1a2d5',
    })
    @ApiResponse({
      status: 200,
      description: 'Danh s√°ch tin nh·∫Øn',
      type: [Message],
    })
    GetAllMessages(@Param('conversationId') conversationId: string) {
      return this.message_service.GetMessage(conversationId);
    }
  
    // ‚úÖ 3. C·∫≠p nh·∫≠t n·ªôi dung tin nh·∫Øn
    @Patch(':id')
    @ApiOperation({ summary: 'C·∫≠p nh·∫≠t n·ªôi dung c·ªßa tin nh·∫Øn' })
    @ApiParam({
      name: 'id',
      description: 'ID c·ªßa tin nh·∫Øn c·∫ßn c·∫≠p nh·∫≠t',
      example: '66e0a0b1f1f84c03d2a1a2d9',
    })
    @ApiBody({
      schema: {
        example: {
          content: 'N·ªôi dung tin nh·∫Øn ƒë√£ ƒë∆∞·ª£c ch·ªânh s·ª≠a',
        },
      },
    })
    @ApiResponse({
      status: 200,
      description: 'Tin nh·∫Øn ƒë∆∞·ª£c c·∫≠p nh·∫≠t th√†nh c√¥ng',
    })
    UpdateMessage(@Param('id') id: string, @Body() dto: UpdateMessageDto) {
      return this.message_service.EditMessage(id, dto);
    }
  
    // ‚úÖ 4. Xo√° tin nh·∫Øn
    @Delete(':id')
    @ApiOperation({ summary: 'Xo√° m·ªôt tin nh·∫Øn theo ID' })
    @ApiParam({
      name: 'id',
      description: 'ID c·ªßa tin nh·∫Øn c·∫ßn xo√°',
      example: '66e0a0b1f1f84c03d2a1a2d9',
    })
    @ApiResponse({ status: 200, description: 'Xo√° tin nh·∫Øn th√†nh c√¥ng' })
    DeleteMessage(@Param('id') id: string) {
      return this.message_service.DeleteMessage(id);
    }
  }
  